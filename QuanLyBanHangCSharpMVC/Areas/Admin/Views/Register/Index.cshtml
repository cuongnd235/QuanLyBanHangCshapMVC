@{
    Layout = null;
}
@using QuanLyBanHangCSharpMVC.Areas.Admin.Data
@model UserDto

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>Admin - Register</title>
    <!-- Bootstrap core CSS-->
    <link href="~/Content/Admin/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <!-- Custom fonts for this template-->
    <link href="~/Content/Admin/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <!-- Custom styles for this template-->
    <link href="~/Content/Admin/css/sb-admin.css" rel="stylesheet">
</head>
<body class="bg-dark">
    <div class="container">
        <div class="card card-register mx-auto mt-5">
            <div class="card-header">Register an Account</div>
            <div class="card-body">
                @using (Html.BeginForm("Index", "Register", FormMethod.Post, new { id = "formRegister" }))
                {
                    <div class="form-group">
                        <div class="form-row">
                            <div class="col-md-12">
                                <div class="form-label-group">
                                    @Html.TextBoxFor(model => model.Name, new { id = "HoTen", @class = "form-control", placeholder = "First name", required = "required", autofocus = "autofocus", Value = Model?.Name })
                                    @Html.LabelFor(model => model.Name, new { @for = "HoTen" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="form-label-group">
                            @Html.TextBoxFor(model => model.Address, new { type = "email", id = "Address", @class = "form-control", placeholder = "Email address", required = "required", Value = Model?.Address })
                            @Html.LabelFor(model => model.Address, new { @for = "Address" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="form-row">
                            <div class="col-md-6">
                                <div class="form-label-group">
                                    @Html.TextBoxFor(model => model.Phone, new { id = "Phone", @class = "form-control", placeholder = "Phone", required = "required", Value = Model?.Phone })
                                    @Html.LabelFor(model => model.Phone, new { @for = "Phone" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-label-group">
                                    @{
                                        var emailAttribute = Model.Id == 0
                                            ? new
                                            {
                                                id = "Email",
                                                @class = "form-control",
                                                placeholder = "Address",
                                                required = "required",
                                                type = "email"
                                            } as object
                                            : new
                                            {
                                                id = "Email",
                                                @class = "form-control",
                                                placeholder = "Address",
                                                required = "required",
                                                Value = Model?.Email,
                                                @readonly = "readonly",
                                                type = "email"
                                            };
                                    }
                                    @Html.TextBoxFor(model => model.Email, emailAttribute)
                                    @Html.LabelFor(model => model.Email, new { @for = "Email" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="form-row">
                            <div class="col-md-6">
                                <div class="form-label-group">
                                    @Html.TextBoxFor(model => model.Password, new { type = "password", id = "inputPassword", @class = "form-control", placeholder = "Password", required = "required" })
                                    @Html.LabelFor(model => model.Password, new { @for = "inputPassword" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-label-group">
                                    @Html.TextBoxFor(model => model.ConfirmPassword, new { type = "password", id = "inputConfirmPassword", @class = "form-control", placeholder = "Confirm Password", required = "required" })
                                    @Html.LabelFor(model => model.ConfirmPassword, new { @for = "inputConfirmPassword" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="mt-3 text-center" id="message">
                        <div class="help-block">
                            @Html.ValidationSummary(false, "", "error")
                        </div>
                    </div>
                    <button type="button" onclick="sumbitForm()" class="btn btn-primary btn-block">Register</button>
                }
                <div class="text-center">
                    @Html.ActionLink("Login Page", "Index", "Login", null, new { @class = "d-block small mt-3" })
                    @Html.ActionLink("Forgot Password?", "Index", "ForgetPassword", null, new { @class = "d-block small" })
                </div>
            </div>
        </div>
    </div>
    <!-- Bootstrap core JavaScript-->
    <script src="~/Content/Admin/vendor/jquery/jquery.min.js"></script>
    <script src="~/Content/Admin/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- Core plugin JavaScript-->
    <script src="~/Content/Admin/vendor/jquery-easing/jquery.easing.min.js"></script>
    <script type="text/javascript">
        function sumbitForm() {
            let password = $("#inputPassword").val();
            let confirmPassword = $("#inputConfirmPassword").val();
            let email = $("#Email").val();
            let regex = /^[a-z0-9._%+-]+@("@")[a-z0-9.-]+\.[a-z]{2,4}$/;
            if (!email.trim())
                $("#message").html("<div class=\"mb-3\">Email không được để trống!</div>");
            else if (!regex.test(email))
                $("#message").html("<div class=\"mb-3\">Email không hợp lệ!</div>");
            else if (password != confirmPassword)
                $("#message").html("<div class=\"mb-3\">Mật khẩu không khớp!</div>");
            else if (!password.trim())
                $("#message").html("<div class=\"mb-3\">Mật khẩu không được để trống!</div>");
            else
                $("#formRegister").submit();
        }

        $("#Phone").keypress(function (event) {
            const pattern = /[0-9]/;
            let inputChar = String.fromCharCode(event.charCode);
            if (!pattern.test(inputChar)) {
                event.preventDefault();
            }
        });
    </script>
</body>
</html>

<style lang="scss" scoped>
    #message {
        color: red;
        display: flex;
        flex-direction: column;
    }

    .help-block ul {
        list-style-type: none;
    }
</style>
